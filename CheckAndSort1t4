#include<stdio.h>
#include<string.h>
#include<stdlib.h>

int compar(const void *a, const void *b){
   char *x=(char*)a;
   char *y=(char*)b;
   return strcmp(x,y);
   // Trả về giá trị so sánh 2 chuỗi
   // Nếu giá trị trả về < 0 thì hàm này chỉ rằng x là ngắn hơn y.
   // Nếu giá trị trả về > 0 thì hàm này chỉ rằng y là ngắn hơn x.
   // Nếu giá trị trả về = 0 thì hàm này chỉ rằng x là bằng y.
}// hàm so sánh 2 phần tử

void Check_And_Sort( char string[], int n){
   char Split_String[1000][10];
   n = 0; // n là số từ sau khi tách từ chuỗi đoạn văn
   strlwr(string);// Chuyển sang in thường.
   char *Dim=strtok(string, " .,");
   while(Dim != NULL){
      strcpy(Split_String[n], Dim);
      n++;
      Dim = strtok(NULL, " .,");
   }// Tách chuỗi thành các từ.
   qsort(Split_String,n,sizeof(Split_String[0]),compar);// So sánh và sắp xếp các từ
   int count=1;
   printf("- The string after sorting : ");
   for(int i=0; i<n ; i++){
         printf("%s ", Split_String[i]);// In ra chuỗi đã sắp xếp
      }
   printf("\n- Number of word repeated in the string : ");
   for(int i=0; i<n ; i++){
      while(strcmp(Split_String[i], Split_String[i+1])==0){
         i++;
         count++;
      }// Đếm số lần xuất hiện của từ trong chuỗi
      printf("\n%s - %d\n", Split_String[i],count);
      count = 1;
   }
}// Hàm sắp xếp và xuất ra số lần lặp lại của các từ.
int main(int argc, char const *argv[])
{
   char STRING[]="Chung ta co mot con bo, con bo do la cua chung ta. Mot ngay no no di an co va bi lac, chinh vi vay chung ta da di tim no het mot ngay. Va cuoi cung da tim lai duoc con bo da di lac. The la het mot ngay tuyet voi";
   int n;
   Check_And_Sort(STRING, n);
   return 0;
}
